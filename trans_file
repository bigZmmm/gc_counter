Parsing...   Conjunction
    Atom x(zero)
    Atom x(one)
    Atom x(two)
size of belief state
3
we are here
  Conjunction
    Atom y(zero)
    Atom y(one)
    Atom y(two)
size of belief state
8
we are here
size of belief state
8
[0.000s CPU, 0.001s wall-clock]
1231

Instantiating...
Normalizing task...   Conjunction
    Conjunction
      Atom x(one)
      Atom y(zero)
[0.000s CPU, 0.000s wall-clock]
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 15 rules.
Computing model... [0.000s CPU, 0.000s wall-clock]
26 relevant atoms
0 auxiliary atoms
26 final queue length
39 total queue pushes
Completing instantiation... [0.000s CPU, 0.000s wall-clock]
Instantiating: [0.000s CPU, 0.002s wall-clock]
(can_move )
ADD: NegatedAtom x(two) -> Atom canmove()
ADD: NegatedAtom y(one) -> Atom canmove()
DEL: Atom x(two), Atom y(one) -> Atom canmove()
cost: 0
(north )
ADD: Atom y(one), Atom canmove() -> Atom y(zero)
ADD: Atom y(two), Atom canmove() -> Atom y(one)
DEL: Atom y(one), Atom canmove() -> Atom y(one)
DEL: Atom y(two), Atom canmove() -> Atom y(two)
DEL:  -> Atom canmove()
cost: 0
(south )
ADD: Atom y(zero), Atom canmove() -> Atom y(one)
ADD: Atom y(one), Atom canmove() -> Atom y(two)
DEL: Atom y(zero), Atom canmove() -> Atom y(zero)
DEL: Atom y(one), Atom canmove() -> Atom y(one)
DEL:  -> Atom canmove()
cost: 0
(east )
ADD: Atom x(zero), Atom canmove() -> Atom x(one)
ADD: Atom x(one), Atom canmove() -> Atom x(two)
DEL: Atom x(zero), Atom canmove() -> Atom x(zero)
DEL: Atom x(one), Atom canmove() -> Atom x(one)
DEL:  -> Atom canmove()
cost: 0
(west )
ADD: Atom x(one), Atom canmove() -> Atom x(zero)
ADD: Atom x(two), Atom canmove() -> Atom x(one)
DEL: Atom x(one), Atom canmove() -> Atom x(one)
DEL: Atom x(two), Atom canmove() -> Atom x(two)
DEL:  -> Atom canmove()
cost: 0
Computing fact groups...
Finding invariants... 5 initial candidates
[0.000s CPU, 0.000s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
8 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.000s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building implied facts dictionary...... [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.000s wall-clock]
0 implied effects removed
0 effect conditions simplified
0 implied preconditions added
Building mutex information... [0.000s CPU, 0.000s wall-clock]
Writing translation key... 111211
state1: 
 Atom x(zero) 
 Atom y(zero) 
state1: 
 Atom x(one) 
 Atom y(zero) 
state1: 
 Atom y(zero) 
 Atom x(two) 
state1: 
 Atom y(one) 
 Atom x(zero) 
state1: 
 Atom y(one) 
 Atom x(one) 
state1: 
 Atom x(zero) 
 Atom y(two) 
state1: 
 Atom x(one) 
 Atom y(two) 
state1: 
 Atom y(two) 
 Atom x(two) 
[0.000s CPU, 0.001s wall-clock]
Writing mutex key... [0.000s CPU, 0.000s wall-clock]
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.000s CPU, 0.005s wall-clock]
