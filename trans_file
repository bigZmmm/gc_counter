Parsing...   Atom locker_damaged(w1)
  Atom locker_damaged(w1)
  Atom locker_damaged(w2)
  Atom locker_damaged(w2)
  Atom closed(w1)
  Atom closed(w1)
  Atom closed(w2)
  Atom closed(w2)
  Atom pos(w1)
  Atom pos(w1)
[0.000s CPU, 0.001s wall-clock]
1231

Instantiating...
Normalizing task...   Conjunction
    Disjunction
      Atom locked(w1)
      Atom locker_damaged(w1)
    Disjunction
      Atom locked(w2)
      Atom locker_damaged(w2)
    Atom closed(w1)
    Atom closed(w2)
[0.000s CPU, 0.000s wall-clock]
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 17 rules.
Computing model... [0.000s CPU, 0.000s wall-clock]
29 relevant atoms
0 auxiliary atoms
29 final queue length
77 total queue pushes
Completing instantiation... [0.000s CPU, 0.000s wall-clock]
Instantiating: [0.000s CPU, 0.002s wall-clock]
(fwd )
ADD: Atom pos(w1) -> Atom pos(w2)
ADD: Atom pos(w2) -> Atom pos(w1)
DEL: Atom pos(w1) -> Atom pos(w1)
DEL: Atom pos(w2) -> Atom pos(w2)
cost: 0
(bwd )
ADD: Atom pos(w1) -> Atom pos(w2)
ADD: Atom pos(w2) -> Atom pos(w1)
DEL: Atom pos(w1) -> Atom pos(w1)
DEL: Atom pos(w2) -> Atom pos(w2)
cost: 0
(close )
ADD: Atom pos(w1) -> Atom closed(w1)
ADD: Atom pos(w2) -> Atom closed(w2)
cost: 0
(lock )
ADD: Atom pos(w1), Atom closed(w1), NegatedAtom locker_damaged(w1) -> Atom locked(w1)
ADD: Atom pos(w2), Atom closed(w2), NegatedAtom locker_damaged(w2) -> Atom locked(w2)
cost: 0
Computing fact groups...
Finding invariants... 0 initial candidates
[0.000s CPU, 0.000s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
9 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.000s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building implied facts dictionary...... [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.000s wall-clock]
0 implied effects removed
0 effect conditions simplified
0 implied preconditions added
Building mutex information... [0.000s CPU, 0.000s wall-clock]
Writing translation key... 111211
Detect oneof combinable... False
[0.000s CPU, 0.000s wall-clock]
maxlen: 2
ONEOFS:
oneof(
((' Atom locker_damaged(w1)',),),
('',)
oneof(
((' Atom locker_damaged(w2)',),),
('',)
oneof(
((' Atom closed(w1)',),),
('',)
oneof(
((' Atom closed(w2)',),),
('',)
oneof(
((' Atom pos(w1)',),),
((' Atom pos(w2)',),)
[0.000s CPU, 0.000s wall-clock]
Writing mutex key... [0.000s CPU, 0.000s wall-clock]
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.000s CPU, 0.004s wall-clock]
